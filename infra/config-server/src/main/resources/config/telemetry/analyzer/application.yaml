logging:
  level:
    ru.yandex.practicum.telemetry: TRACE
    org:
      springframework: ERROR
      apache.kafka: WARN

spring:
  sql:
    init:
      mode: always
  datasource:
    url: jdbc:postgresql://localhost:5432/smart_home
    username: user
    password: password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true

grpc:
  client:
    hub-router:
      address: 'discovery:///hub-router'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

analyzer:
  kafka:
    hub-consumer:
      properties:
        bootstrap.servers: localhost:9092
        group.id: analyzer-hubs
        auto.offset.reset: earliest
        enable.auto.commit: false
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: ru.yandex.practicum.deserializer.HubEventDeserializer
      topic: telemetry.hubs.v1
    snapshot-consumer:
      properties:
        bootstrap.servers: localhost:9092
        group.id: analyzer-snapshots
        auto.offset.reset: earliest
        enable.auto.commit: false
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: ru.yandex.practicum.deserializer.SensorsSnapshotAvroDeserializer
      topic: telemetry.snapshots.v1
